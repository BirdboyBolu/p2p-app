<SingleLineTextInput>:
    size_hint_y: None
    height: self.line_height * 1 + self.padding[1] + self.padding[3] + self.extra_padding
    multiline: False
    padding: (app.text_input_padding_x, app.text_input_padding_y)
    cursor_width: '3sp'


<CustomTextField>:


<CustomTextFieldRound>:
    multiline: False
    size_hint: 1, None
    height: self.line_height + dp(10)
    background_active: f'{images_path}transparent.png'
    background_normal: f'{images_path}transparent.png'
    hint_text_color: self.theme_cls.disabled_hint_text_color
    padding:
        self._lbl_icon_left.texture_size[1] + dp(10) if self.icon_left else dp(15), \
        (self.height / 2) - (self.line_height / 2), \
        self._lbl_icon_right.texture_size[1] + dp(20) if self.icon_right else dp(15), \
        0

    canvas.before:
        Color:
            rgba: self.normal_color if not self.focus else self._color_active
        Ellipse:
            angle_start: 180
            angle_end: 360
            pos: self.pos[0] - self.size[1] / 2, self.pos[1]
            size: self.size[1], self.size[1]
        Ellipse:
            angle_start: 360
            angle_end: 540
            pos: self.size[0] + self.pos[0] - self.size[1]/2.0, self.pos[1]
            size: self.size[1], self.size[1]
        Rectangle:
            pos: self.pos
            size: self.size

        # Texture of left Icon.
        Color:
            rgba:
                self.icon_left_color \
                if self.focus else self.theme_cls.disabled_hint_text_color
        Rectangle:
            texture: self._lbl_icon_left.texture
            size:
                self._lbl_icon_left.texture_size if self.icon_left \
                else (0, 0)
            pos:
                self.x, \
                self.center[1] - self._lbl_icon_right.texture_size[1] / 2

        # Texture of right Icon.
        Color:
            rgba:
                self.icon_right_color \
                if self.focus else self.theme_cls.disabled_hint_text_color
        Rectangle:
            texture: self._lbl_icon_right.texture
            size:
                self._lbl_icon_right.texture_size if self.icon_right \
                else (0, 0)
            pos:
                (self.width + self.x) - (self._lbl_icon_right.texture_size[1]), \
                self.center[1] - self._lbl_icon_right.texture_size[1] / 2

        Color:
            rgba:
                self.hint_text_color if not self.text else root.foreground_color

    canvas.after:
        Color:
            rgba: self.line_color if self.focus else self.theme_cls.disabled_hint_text_color
        Line:
            points: self.pos[0] , self.pos[1], self.pos[0] + self.size[0], self.pos[1]
        Line:
            points: self.pos[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1] + self.size[1]
        Line:
            ellipse: self.pos[0] - self.size[1] / 2, self.pos[1], self.size[1], self.size[1], 180, 360
        Line:
            ellipse: self.size[0] + self.pos[0] - self.size[1] / 2.0, self.pos[1], self.size[1], self.size[1], 360, 540


<MultiLineTextInput>:
    size_hint_y: None
    height: self.line_height * self.num_lines + self.text_padding_y * 2 + self.extra_padding
    padding: (app.text_input_padding_x, app.text_input_padding_y)
    num_lines: 3
    multiline: True
    cursor_width: '3sp'


<RoundedTextInput>:


<DynamicHeightTextInput>:
    size_hint_y: None
    height: self.line_height * 1 + self.padding[1] + self.padding[3] + self.extra_padding
    padding: (app.text_input_padding_x, app.text_input_padding_y)
    font_size: app.chat_input_font_size
    font_name: font_path('JetBrainsMono-Medium.ttf')
    cursor_width: '3sp'
    max_lines: 7
    background_normal: self.background_active
    background_disabled_normal: self.background_active
